Pattern matching works on enums.

SOURCE:
{
  enum Color { Red, Blue(string) }

  let x = Color::Blue("foo");
  match x {
    Color::Red => "bar",
    Color::Blue(c) => str_concat(c, "!"),
  }
}

OUTPUT:
string
---
No errors.
---
{
  "Block": {
    "stmts": [
      {
        "EnumDef": {
          "def": {
            "name": "Color",
            "generics": [],
            "cons": [
              {
                "name": "Red",
                "fields": []
              },
              {
                "name": "Blue",
                "fields": [
                  {
                    "name": "field0",
                    "ann": {
                      "Con": {
                        "name": "string",
                        "args": []
                      }
                    },
                    "ty": {
                      "Con": {
                        "name": "string",
                        "args": []
                      }
                    }
                  }
                ]
              }
            ]
          },
          "span": {
            "start": {
              "line": 2,
              "col": 2
            },
            "end": {
              "line": 2,
              "col": 34
            }
          }
        }
      },
      {
        "Let": {
          "binding": {
            "pat": {
              "Type": {
                "ident": "x",
                "is_mut": false,
                "ann": "Unknown",
                "span": {
                  "start": {
                    "line": 4,
                    "col": 6
                  },
                  "end": {
                    "line": 4,
                    "col": 7
                  }
                }
              }
            },
            "ann": "Unknown",
            "ty": {
              "Con": {
                "name": "Color",
                "args": []
              }
            }
          },
          "value": {
            "Call": {
              "func": {
                "Var": {
                  "value": "Color::Blue",
                  "decl": {
                    "file_id": {
                      "package": "dummy",
                      "filename": "dummy"
                    },
                    "span": {
                      "start": {
                        "line": 2,
                        "col": 2
                      },
                      "end": {
                        "line": 2,
                        "col": 34
                      }
                    }
                  },
                  "generics_instantiated": [],
                  "ty": {
                    "Fun": {
                      "args": [
                        {
                          "Con": {
                            "name": "string",
                            "args": []
                          }
                        }
                      ],
                      "bounds": [],
                      "ret": {
                        "Con": {
                          "name": "Color",
                          "args": []
                        }
                      },
                      "id": -1
                    }
                  },
                  "span": {
                    "start": {
                      "line": 4,
                      "col": 10
                    },
                    "end": {
                      "line": 4,
                      "col": 21
                    }
                  }
                }
              },
              "args": [
                {
                  "Literal": {
                    "lit": {
                      "String": [
                        "foo",
                        null
                      ]
                    },
                    "ty": {
                      "Con": {
                        "name": "string",
                        "args": []
                      }
                    },
                    "span": {
                      "start": {
                        "line": 4,
                        "col": 22
                      },
                      "end": {
                        "line": 4,
                        "col": 27
                      }
                    }
                  }
                }
              ],
              "ty": {
                "Con": {
                  "name": "Color",
                  "args": []
                }
              },
              "span": {
                "start": {
                  "line": 4,
                  "col": 10
                },
                "end": {
                  "line": 4,
                  "col": 28
                }
              }
            }
          },
          "ty": {
            "Con": {
              "name": "Color",
              "args": []
            }
          },
          "span": {
            "start": {
              "line": 4,
              "col": 2
            },
            "end": {
              "line": 4,
              "col": 29
            }
          }
        }
      },
      {
        "Match": {
          "subject": {
            "Var": {
              "value": "x",
              "decl": {
                "file_id": {
                  "package": "dummy",
                  "filename": "dummy"
                },
                "span": {
                  "start": {
                    "line": 4,
                    "col": 6
                  },
                  "end": {
                    "line": 4,
                    "col": 7
                  }
                }
              },
              "generics_instantiated": [],
              "ty": {
                "Con": {
                  "name": "Color",
                  "args": []
                }
              },
              "span": {
                "start": {
                  "line": 5,
                  "col": 8
                },
                "end": {
                  "line": 5,
                  "col": 9
                }
              }
            }
          },
          "arms": [
            {
              "pat": {
                "Pat": {
                  "ident": "Color::Red",
                  "elems": [],
                  "ty": {
                    "Con": {
                      "name": "Color",
                      "args": []
                    }
                  },
                  "span": {
                    "start": {
                      "line": 6,
                      "col": 4
                    },
                    "end": {
                      "line": 6,
                      "col": 14
                    }
                  }
                }
              },
              "expr": {
                "Literal": {
                  "lit": {
                    "String": [
                      "bar",
                      null
                    ]
                  },
                  "ty": {
                    "Con": {
                      "name": "string",
                      "args": []
                    }
                  },
                  "span": {
                    "start": {
                      "line": 6,
                      "col": 18
                    },
                    "end": {
                      "line": 6,
                      "col": 23
                    }
                  }
                }
              }
            },
            {
              "pat": {
                "Pat": {
                  "ident": "Color::Blue",
                  "elems": [
                    {
                      "Type": {
                        "ident": "c",
                        "is_mut": false,
                        "ann": "Unknown",
                        "span": {
                          "start": {
                            "line": 7,
                            "col": 16
                          },
                          "end": {
                            "line": 7,
                            "col": 17
                          }
                        }
                      }
                    }
                  ],
                  "ty": {
                    "Con": {
                      "name": "Color",
                      "args": []
                    }
                  },
                  "span": {
                    "start": {
                      "line": 7,
                      "col": 4
                    },
                    "end": {
                      "line": 7,
                      "col": 18
                    }
                  }
                }
              },
              "expr": {
                "Call": {
                  "func": {
                    "Var": {
                      "value": "str_concat",
                      "decl": {
                        "file_id": {
                          "package": "std",
                          "filename": "builtin.brg"
                        },
                        "span": {
                          "start": {
                            "line": 0,
                            "col": 0
                          },
                          "end": {
                            "line": 0,
                            "col": 0
                          }
                        }
                      },
                      "generics_instantiated": [],
                      "ty": {
                        "Fun": {
                          "args": [
                            {
                              "Con": {
                                "name": "string",
                                "args": []
                              }
                            },
                            {
                              "Con": {
                                "name": "string",
                                "args": []
                              }
                            }
                          ],
                          "bounds": [],
                          "ret": {
                            "Con": {
                              "name": "string",
                              "args": []
                            }
                          },
                          "id": -1
                        }
                      },
                      "span": {
                        "start": {
                          "line": 7,
                          "col": 22
                        },
                        "end": {
                          "line": 7,
                          "col": 32
                        }
                      }
                    }
                  },
                  "args": [
                    {
                      "Var": {
                        "value": "c",
                        "decl": {
                          "file_id": {
                            "package": "dummy",
                            "filename": "dummy"
                          },
                          "span": {
                            "start": {
                              "line": 7,
                              "col": 16
                            },
                            "end": {
                              "line": 7,
                              "col": 17
                            }
                          }
                        },
                        "generics_instantiated": [],
                        "ty": {
                          "Con": {
                            "name": "string",
                            "args": []
                          }
                        },
                        "span": {
                          "start": {
                            "line": 7,
                            "col": 33
                          },
                          "end": {
                            "line": 7,
                            "col": 34
                          }
                        }
                      }
                    },
                    {
                      "Literal": {
                        "lit": {
                          "String": [
                            "!",
                            null
                          ]
                        },
                        "ty": {
                          "Con": {
                            "name": "string",
                            "args": []
                          }
                        },
                        "span": {
                          "start": {
                            "line": 7,
                            "col": 36
                          },
                          "end": {
                            "line": 7,
                            "col": 39
                          }
                        }
                      }
                    }
                  ],
                  "ty": {
                    "Con": {
                      "name": "string",
                      "args": []
                    }
                  },
                  "span": {
                    "start": {
                      "line": 7,
                      "col": 22
                    },
                    "end": {
                      "line": 7,
                      "col": 40
                    }
                  }
                }
              }
            }
          ],
          "ty": {
            "Con": {
              "name": "string",
              "args": []
            }
          },
          "span": {
            "start": {
              "line": 5,
              "col": 2
            },
            "end": {
              "line": 8,
              "col": 3
            }
          }
        }
      }
    ],
    "ty": {
      "Con": {
        "name": "string",
        "args": []
      }
    },
    "span": {
      "start": {
        "line": 1,
        "col": 0
      },
      "end": {
        "line": 9,
        "col": 1
      }
    }
  }
}
