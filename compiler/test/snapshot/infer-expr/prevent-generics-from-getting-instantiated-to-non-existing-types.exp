Prevent generics from getting instantiated to non existing types

SOURCE:
{
    enum Foo<T, Y> { Bar(T), Baz(Y) }

    impl<T, Y> Foo<T, Y> {
        fn make_bar(x: T) -> Foo<T, Y> { Foo::Bar(x) }

        fn do_stuff(self, y: Y) -> Y {
            self as Foo<T, K>;
            y
        }
    }
}

OUTPUT:
Type not found: K

8|              self as Foo<T, K>;
                ^^^^^^^^^^^^^^^^^