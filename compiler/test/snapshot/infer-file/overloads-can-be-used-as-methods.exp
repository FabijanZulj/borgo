Overloads can be used as methods.

SOURCE:
struct Foo {
  x: Int,
}

fn borgo_main() -> String {
  let f = Foo { x: 1 };
  Foo::to_string(f)
}

OUTPUT:
fn () -> String
---
No errors.
---
{
  "files": [
    {
      "name": "test.brg",
      "decls": [
        {
          "StructDef": {
            "def": {
              "name": "Foo",
              "generics": [],
              "fields": [
                {
                  "name": "x",
                  "ann": {
                    "Con": {
                      "name": "Int",
                      "args": []
                    }
                  },
                  "ty": {
                    "Con": {
                      "name": "Int",
                      "args": []
                    }
                  }
                }
              ]
            },
            "span": {
              "start": {
                "line": 1,
                "col": 0
              },
              "end": {
                "line": 3,
                "col": 1
              }
            }
          }
        },
        {
          "Closure": {
            "fun": {
              "name": "borgo_main",
              "generics": [],
              "bounds": [],
              "args": [],
              "ret": {
                "Con": {
                  "name": "String",
                  "args": []
                }
              },
              "ann": {
                "Con": {
                  "name": "String",
                  "args": []
                }
              },
              "body": {
                "Block": {
                  "stmts": [
                    {
                      "Let": {
                        "binding": {
                          "pat": {
                            "Type": {
                              "ident": "f",
                              "ann": "Unknown",
                              "span": {
                                "start": {
                                  "line": 6,
                                  "col": 6
                                },
                                "end": {
                                  "line": 6,
                                  "col": 7
                                }
                              }
                            }
                          },
                          "ann": "Unknown",
                          "ty": {
                            "Con": {
                              "name": "Foo",
                              "args": []
                            }
                          }
                        },
                        "value": {
                          "StructCall": {
                            "name": "Foo",
                            "fields": [
                              {
                                "name": "x",
                                "value": {
                                  "Literal": {
                                    "lit": {
                                      "Int": 1
                                    },
                                    "ty": {
                                      "Con": {
                                        "name": "Int",
                                        "args": []
                                      }
                                    },
                                    "span": {
                                      "start": {
                                        "line": 6,
                                        "col": 19
                                      },
                                      "end": {
                                        "line": 6,
                                        "col": 20
                                      }
                                    }
                                  }
                                }
                              }
                            ],
                            "rest": null,
                            "ty": {
                              "Con": {
                                "name": "Foo",
                                "args": []
                              }
                            },
                            "span": {
                              "start": {
                                "line": 6,
                                "col": 10
                              },
                              "end": {
                                "line": 6,
                                "col": 22
                              }
                            }
                          }
                        },
                        "mutable": false,
                        "ty": {
                          "Con": {
                            "name": "Foo",
                            "args": []
                          }
                        },
                        "span": {
                          "start": {
                            "line": 6,
                            "col": 2
                          },
                          "end": {
                            "line": 6,
                            "col": 23
                          }
                        }
                      }
                    },
                    {
                      "Call": {
                        "func": {
                          "Var": {
                            "value": "Foo::to_string",
                            "decl": {
                              "file_id": {
                                "package": "std",
                                "filename": "builtin.brg"
                              },
                              "span": {
                                "start": {
                                  "line": 0,
                                  "col": 0
                                },
                                "end": {
                                  "line": 0,
                                  "col": 0
                                }
                              }
                            },
                            "ty": {
                              "Fun": {
                                "args": [
                                  {
                                    "Con": {
                                      "name": "Foo",
                                      "args": []
                                    }
                                  }
                                ],
                                "bounds": [],
                                "ret": {
                                  "Con": {
                                    "name": "String",
                                    "args": []
                                  }
                                },
                                "fx": []
                              }
                            },
                            "span": {
                              "start": {
                                "line": 7,
                                "col": 2
                              },
                              "end": {
                                "line": 7,
                                "col": 16
                              }
                            }
                          }
                        },
                        "args": [
                          {
                            "Var": {
                              "value": "f",
                              "decl": {
                                "file_id": {
                                  "package": "user",
                                  "filename": "test.brg"
                                },
                                "span": {
                                  "start": {
                                    "line": 6,
                                    "col": 6
                                  },
                                  "end": {
                                    "line": 6,
                                    "col": 7
                                  }
                                }
                              },
                              "ty": {
                                "Con": {
                                  "name": "Foo",
                                  "args": []
                                }
                              },
                              "span": {
                                "start": {
                                  "line": 7,
                                  "col": 17
                                },
                                "end": {
                                  "line": 7,
                                  "col": 18
                                }
                              }
                            }
                          }
                        ],
                        "ty": {
                          "Con": {
                            "name": "String",
                            "args": []
                          }
                        },
                        "span": {
                          "start": {
                            "line": 7,
                            "col": 2
                          },
                          "end": {
                            "line": 7,
                            "col": 19
                          }
                        }
                      }
                    }
                  ],
                  "ty": {
                    "Con": {
                      "name": "String",
                      "args": []
                    }
                  },
                  "span": {
                    "start": {
                      "line": 5,
                      "col": 26
                    },
                    "end": {
                      "line": 8,
                      "col": 1
                    }
                  }
                }
              }
            },
            "kind": "TopLevel",
            "ty": {
              "Fun": {
                "args": [],
                "bounds": [],
                "ret": {
                  "Con": {
                    "name": "String",
                    "args": []
                  }
                },
                "fx": []
              }
            },
            "span": {
              "start": {
                "line": 5,
                "col": 0
              },
              "end": {
                "line": 8,
                "col": 1
              }
            }
          }
        }
      ],
      "source": "struct Foo {\n  x: Int,\n}\n\nfn borgo_main() -> String {\n  let f = Foo { x: 1 };\n  Foo::to_string(f)\n}"
    }
  ],
  "errors": [
    [
      "test.brg",
      []
    ]
  ]
}
