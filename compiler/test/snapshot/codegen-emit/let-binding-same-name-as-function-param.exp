Let binding same name as function param

SOURCE:
fn foo(xs: List<Int>) -> Int {
  let xs = xs.seq().sum();
  xs + 10
}

fn borgo_main() {
  foo([1,2,3]).assert_eq(16);
}

OUTPUT:

---
package main

import borgo "borgo/runtime"

var _ = borgo.Unit

func foo(xs any) any {

	{

		var xs any = Seq_sum(List_seq(xs))

		return borgo.Ops.IAdd(xs, 10)
	}
}
func borgo_main() any {

	{

		return Debug_assert_eq(foo(borgo.List(1, 2, 3)), 16)
	}
}

func pkg_user_init() {
	borgo.RegisterGlobalFunction("foo", foo)
	borgo.RegisterGlobalFunction("borgo_main", borgo_main)
}
