Early returns in blocks.

SOURCE:
fn foo() -> Int {
  {
    return 5;
  }

  999
}

fn borgo_main() {
  foo().assert_eq(5);
}

OUTPUT:

---
package main

import borgo "borgo/runtime"

var _ = borgo.Unit

func foo() any {

	var var1_block any
	{
		var var2_block any
		{
			var3 := 5
			return var3
			var4 := borgo.Unit
			var2_block = var4
		}
		_ = var2_block
		var5 := 999
		var1_block = var5
	}
	return var1_block
}

func borgo_main() any {

	var var1_block any
	{
		var2 := foo
		var3 := var2()
		var4 := 5
		var5 := Debug_assert_eq
		var6 := var5(var3, var4)
		var1_block = var6
	}
	return var1_block
}

func pkg_user_init() {
	borgo.RegisterGlobalFunction("foo", foo)
	borgo.RegisterGlobalFunction("borgo_main", borgo_main)
}
