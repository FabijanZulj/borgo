Refs

SOURCE:
fn borgo_main() {
  let count = 0.to_ref();
  [0, 0, 0].seq().for_each(|_| count.mutate(|c| c + 1));
  count.get().assert_eq(3);
  ()
}

OUTPUT:

---
package main

import borgo "borgo/runtime"

var _ = borgo.Unit

func borgo_main() any {

	{

		var count any = Ref_to_ref(0)

		Seq_for_each(List_seq(borgo.List(0, 0, 0)), func(_ any) any {

			{

				return Ref_mutate(count, func(c any) any {

					{

						return borgo.Ops.IAdd(c, 1)
					}
				})
			}
		})

		Debug_assert_eq(Ref_get(count), 3)

		return borgo.Unit
	}
}

func pkg_user_init() {
	borgo.RegisterGlobalFunction("borgo_main", borgo_main)
}
